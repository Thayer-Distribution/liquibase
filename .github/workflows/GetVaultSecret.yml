# This is a basic workflow to install JAVA and Get DB Wallet
name: GetVaultSecret
# Controls when the workflow will run
on:
 pull_request:
    branches: [ "main" ]
 workflow_dispatch:
   inputs:
      envname:
        description: 'env name'
        required: true
        type: string
        default: dev
      vault-name:
        description: 'Name of the OCI vault '
        required: true
        type: string
        default: 'Thayer_Development'
      compartment-Name:
        description: 'Compartment of the Vault '
        required: true
        type: string
        default: 'ocid1.autonomousdatabase.oc1.iad.anuwcljtu77r3maaehdefvkn5muw2shpvh7ezgafvtyz53hydels2vlhouda'
      secret-Name:
        description: 'secret name to retrieve from the Vault '
        required: true
        type: string
        default: 'ocid1.autonomousdatabase.oc1.iad.anuwcljtu77r3maaehdefvkn5muw2shpvh7ezgafvtyz53hydels2vlhouda'
     


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   getVaultData:
    runs-on: self-hosted
    environment: ${{ inputs.envname }}
    name: Integrate and execute LB through SQLcl 
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      
      VAULTENV: ${{ inputs.envname || 'dev' }}
      VAULT_NAME: ${{ inputs.vault-name || 'Thayer_Development' }}
      
      
      COMAPRTMENT_NAME: ${{ inputs.compartment-name || 'Thayer_Development' }}
      
     
      SECRET_NAME: ${{ inputs.secret-name || 'ocid1.autonomousdatabase.oc1.iad.anuwcljtntxkdlyambke7vkjliaugvioqteeobnp5q7vs5x6hdp56elwczla' }}
     
  
    steps:
     
      - name: Get Secrete Compartments OCID 
        uses: ./.github/workflows/GetOCIDsOfResources.yml
        id: getcompandsecretocid
       
        with:
           envname: ${{ inputs.envname || 'dev' }} 
           compartment-name: ${{  inputs.compartment-name || 'thayer_dev' }}
           secret-name: ${{  inputs.compartment-name || 'thayer_dev' }}
           
          
        
      
      
      - name: Get Vault Data
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        id: getvaultdata
       
        with:
          command: ' oci secrets secret-bundle get --raw-output --secret-id ${{ steps.getcompandsecretocid.outputs.secretid }} --query "data.\"secret-bundle-content\".content" | base64 -D'
          silent: false
      
